{"ast":null,"code":"var work = require('webworkify');\n\nvar workerSocketImpl = require('./workerSocketImpl');\n\nfunction WorkerSocket(uri) {\n  this.socket_ = work(workerSocketImpl);\n  this.socket_.addEventListener('message', this.handleWorkerMessage_.bind(this));\n  this.socket_.postMessage({\n    uri: uri\n  });\n}\n\nWorkerSocket.prototype.handleWorkerMessage_ = function (ev) {\n  var data = ev.data;\n\n  if (data instanceof ArrayBuffer || typeof data === 'string') {\n    // binary or JSON message from rosbridge\n    this.onmessage(ev);\n  } else {\n    // control message from the wrapped WebSocket\n    var type = data.type;\n\n    if (type === 'close') {\n      this.onclose(null);\n    } else if (type === 'open') {\n      this.onopen(null);\n    } else if (type === 'error') {\n      this.onerror(null);\n    } else {\n      throw 'Unknown message from workersocket';\n    }\n  }\n};\n\nWorkerSocket.prototype.send = function (data) {\n  this.socket_.postMessage(data);\n};\n\nWorkerSocket.prototype.close = function () {\n  this.socket_.postMessage({\n    close: true\n  });\n};\n\nmodule.exports = WorkerSocket;","map":{"version":3,"sources":["/Users/julien/Sites/react-ros-robot/node_modules/roslib/src/util/workerSocket.js"],"names":["work","require","workerSocketImpl","WorkerSocket","uri","socket_","addEventListener","handleWorkerMessage_","bind","postMessage","prototype","ev","data","ArrayBuffer","onmessage","type","onclose","onopen","onerror","send","close","module","exports"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,YAAD,CAAlB;;AACA,IAAIC,gBAAgB,GAAGD,OAAO,CAAC,oBAAD,CAA9B;;AAEA,SAASE,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,OAAKC,OAAL,GAAeL,IAAI,CAACE,gBAAD,CAAnB;AAEA,OAAKG,OAAL,CAAaC,gBAAb,CAA8B,SAA9B,EAAyC,KAAKC,oBAAL,CAA0BC,IAA1B,CAA+B,IAA/B,CAAzC;AAEA,OAAKH,OAAL,CAAaI,WAAb,CAAyB;AACvBL,IAAAA,GAAG,EAAEA;AADkB,GAAzB;AAGD;;AAEDD,YAAY,CAACO,SAAb,CAAuBH,oBAAvB,GAA8C,UAASI,EAAT,EAAa;AACzD,MAAIC,IAAI,GAAGD,EAAE,CAACC,IAAd;;AACA,MAAIA,IAAI,YAAYC,WAAhB,IAA+B,OAAOD,IAAP,KAAgB,QAAnD,EAA6D;AAC3D;AACA,SAAKE,SAAL,CAAeH,EAAf;AACD,GAHD,MAGO;AACL;AACA,QAAII,IAAI,GAAGH,IAAI,CAACG,IAAhB;;AACA,QAAIA,IAAI,KAAK,OAAb,EAAsB;AACpB,WAAKC,OAAL,CAAa,IAAb;AACD,KAFD,MAEO,IAAID,IAAI,KAAK,MAAb,EAAqB;AAC1B,WAAKE,MAAL,CAAY,IAAZ;AACD,KAFM,MAEA,IAAIF,IAAI,KAAK,OAAb,EAAsB;AAC3B,WAAKG,OAAL,CAAa,IAAb;AACD,KAFM,MAEA;AACL,YAAM,mCAAN;AACD;AACF;AACF,CAlBD;;AAoBAf,YAAY,CAACO,SAAb,CAAuBS,IAAvB,GAA8B,UAASP,IAAT,EAAe;AAC3C,OAAKP,OAAL,CAAaI,WAAb,CAAyBG,IAAzB;AACD,CAFD;;AAIAT,YAAY,CAACO,SAAb,CAAuBU,KAAvB,GAA+B,YAAW;AACxC,OAAKf,OAAL,CAAaI,WAAb,CAAyB;AACvBW,IAAAA,KAAK,EAAE;AADgB,GAAzB;AAGD,CAJD;;AAMAC,MAAM,CAACC,OAAP,GAAiBnB,YAAjB","sourcesContent":["var work = require('webworkify');\nvar workerSocketImpl = require('./workerSocketImpl');\n\nfunction WorkerSocket(uri) {\n  this.socket_ = work(workerSocketImpl);\n\n  this.socket_.addEventListener('message', this.handleWorkerMessage_.bind(this));\n\n  this.socket_.postMessage({\n    uri: uri,\n  });\n}\n\nWorkerSocket.prototype.handleWorkerMessage_ = function(ev) {\n  var data = ev.data;\n  if (data instanceof ArrayBuffer || typeof data === 'string') {\n    // binary or JSON message from rosbridge\n    this.onmessage(ev);\n  } else {\n    // control message from the wrapped WebSocket\n    var type = data.type;\n    if (type === 'close') {\n      this.onclose(null);\n    } else if (type === 'open') {\n      this.onopen(null);\n    } else if (type === 'error') {\n      this.onerror(null);\n    } else {\n      throw 'Unknown message from workersocket';\n    }\n  }\n};\n\nWorkerSocket.prototype.send = function(data) {\n  this.socket_.postMessage(data);\n};\n\nWorkerSocket.prototype.close = function() {\n  this.socket_.postMessage({\n    close: true\n  });\n};\n\nmodule.exports = WorkerSocket;\n"]},"metadata":{},"sourceType":"script"}