{"ast":null,"code":"var WebSocket = WebSocket || require('ws');\n\nmodule.exports = function (self) {\n  var socket = null;\n\n  function handleSocketMessage(ev) {\n    var data = ev.data;\n\n    if (data instanceof ArrayBuffer) {\n      // binary message, transfer for speed\n      self.postMessage(data, [data]);\n    } else {\n      // JSON message, copy string\n      self.postMessage(data);\n    }\n  }\n\n  function handleSocketControl(ev) {\n    self.postMessage({\n      type: ev.type\n    });\n  }\n\n  self.addEventListener('message', function (ev) {\n    var data = ev.data;\n\n    if (typeof data === 'string') {\n      // JSON message from ROSLIB\n      socket.send(data);\n    } else {\n      // control message\n      if (data.hasOwnProperty('close')) {\n        socket.close();\n        socket = null;\n      } else if (data.hasOwnProperty('uri')) {\n        var uri = data.uri;\n        socket = new WebSocket(uri);\n        socket.binaryType = 'arraybuffer';\n        socket.onmessage = handleSocketMessage;\n        socket.onclose = handleSocketControl;\n        socket.onopen = handleSocketControl;\n        socket.onerror = handleSocketControl;\n      } else {\n        throw 'Unknown message to WorkerSocket';\n      }\n    }\n  });\n};","map":{"version":3,"sources":["/Users/julien/Sites/react-ros-robot/node_modules/roslib/src/util/workerSocketImpl.js"],"names":["WebSocket","require","module","exports","self","socket","handleSocketMessage","ev","data","ArrayBuffer","postMessage","handleSocketControl","type","addEventListener","send","hasOwnProperty","close","uri","binaryType","onmessage","onclose","onopen","onerror"],"mappings":"AAAA,IAAIA,SAAS,GAAGA,SAAS,IAAIC,OAAO,CAAC,IAAD,CAApC;;AAEAC,MAAM,CAACC,OAAP,GAAiB,UAASC,IAAT,EAAe;AAC9B,MAAIC,MAAM,GAAG,IAAb;;AAEA,WAASC,mBAAT,CAA6BC,EAA7B,EAAiC;AAC/B,QAAIC,IAAI,GAAGD,EAAE,CAACC,IAAd;;AAEA,QAAIA,IAAI,YAAYC,WAApB,EAAiC;AAC/B;AACAL,MAAAA,IAAI,CAACM,WAAL,CAAiBF,IAAjB,EAAuB,CAACA,IAAD,CAAvB;AACD,KAHD,MAGO;AACL;AACAJ,MAAAA,IAAI,CAACM,WAAL,CAAiBF,IAAjB;AACD;AACF;;AAED,WAASG,mBAAT,CAA6BJ,EAA7B,EAAiC;AAC/BH,IAAAA,IAAI,CAACM,WAAL,CAAiB;AAACE,MAAAA,IAAI,EAAEL,EAAE,CAACK;AAAV,KAAjB;AACD;;AAEDR,EAAAA,IAAI,CAACS,gBAAL,CAAsB,SAAtB,EAAiC,UAASN,EAAT,EAAa;AAC5C,QAAIC,IAAI,GAAGD,EAAE,CAACC,IAAd;;AAEA,QAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B;AACAH,MAAAA,MAAM,CAACS,IAAP,CAAYN,IAAZ;AACD,KAHD,MAGO;AACL;AACA,UAAIA,IAAI,CAACO,cAAL,CAAoB,OAApB,CAAJ,EAAkC;AAChCV,QAAAA,MAAM,CAACW,KAAP;AACAX,QAAAA,MAAM,GAAG,IAAT;AACD,OAHD,MAGO,IAAIG,IAAI,CAACO,cAAL,CAAoB,KAApB,CAAJ,EAAgC;AACrC,YAAIE,GAAG,GAAGT,IAAI,CAACS,GAAf;AAEAZ,QAAAA,MAAM,GAAG,IAAIL,SAAJ,CAAciB,GAAd,CAAT;AACAZ,QAAAA,MAAM,CAACa,UAAP,GAAoB,aAApB;AAEAb,QAAAA,MAAM,CAACc,SAAP,GAAmBb,mBAAnB;AACAD,QAAAA,MAAM,CAACe,OAAP,GAAiBT,mBAAjB;AACAN,QAAAA,MAAM,CAACgB,MAAP,GAAgBV,mBAAhB;AACAN,QAAAA,MAAM,CAACiB,OAAP,GAAiBX,mBAAjB;AACD,OAVM,MAUA;AACL,cAAM,iCAAN;AACD;AACF;AACF,GAzBD;AA0BD,CA7CD","sourcesContent":["var WebSocket = WebSocket || require('ws');\n\nmodule.exports = function(self) {\n  var socket = null;\n\n  function handleSocketMessage(ev) {\n    var data = ev.data;\n\n    if (data instanceof ArrayBuffer) {\n      // binary message, transfer for speed\n      self.postMessage(data, [data]);\n    } else {\n      // JSON message, copy string\n      self.postMessage(data);\n    }\n  }\n\n  function handleSocketControl(ev) {\n    self.postMessage({type: ev.type});\n  }\n\n  self.addEventListener('message', function(ev) {\n    var data = ev.data;\n\n    if (typeof data === 'string') {\n      // JSON message from ROSLIB\n      socket.send(data);\n    } else {\n      // control message\n      if (data.hasOwnProperty('close')) {\n        socket.close();\n        socket = null;\n      } else if (data.hasOwnProperty('uri')) {\n        var uri = data.uri;\n\n        socket = new WebSocket(uri);\n        socket.binaryType = 'arraybuffer';\n\n        socket.onmessage = handleSocketMessage;\n        socket.onclose = handleSocketControl;\n        socket.onopen = handleSocketControl;\n        socket.onerror = handleSocketControl;\n      } else {\n        throw 'Unknown message to WorkerSocket';\n      }\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"script"}