{"ast":null,"code":"/**\n * @fileoverview\n * @author David Gossow - dgossow@willowgarage.com\n */\n\n/**\n * A 3D vector.\n *\n *  @constructor\n *  @param options - object with following keys:\n *   * x - the x value\n *   * y - the y value\n *   * z - the z value\n */\nfunction Vector3(options) {\n  options = options || {};\n  this.x = options.x || 0;\n  this.y = options.y || 0;\n  this.z = options.z || 0;\n}\n/**\n * Set the values of this vector to the sum of itself and the given vector.\n *\n * @param v the vector to add with\n */\n\n\nVector3.prototype.add = function (v) {\n  this.x += v.x;\n  this.y += v.y;\n  this.z += v.z;\n};\n/**\n * Set the values of this vector to the difference of itself and the given vector.\n *\n * @param v the vector to subtract with\n */\n\n\nVector3.prototype.subtract = function (v) {\n  this.x -= v.x;\n  this.y -= v.y;\n  this.z -= v.z;\n};\n/**\n * Multiply the given Quaternion with this vector.\n *\n * @param q - the quaternion to multiply with\n */\n\n\nVector3.prototype.multiplyQuaternion = function (q) {\n  var ix = q.w * this.x + q.y * this.z - q.z * this.y;\n  var iy = q.w * this.y + q.z * this.x - q.x * this.z;\n  var iz = q.w * this.z + q.x * this.y - q.y * this.x;\n  var iw = -q.x * this.x - q.y * this.y - q.z * this.z;\n  this.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n  this.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n  this.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n};\n/**\n * Clone a copy of this vector.\n *\n * @returns the cloned vector\n */\n\n\nVector3.prototype.clone = function () {\n  return new Vector3(this);\n};\n\nmodule.exports = Vector3;","map":{"version":3,"sources":["/Users/julien/Sites/react-ros-robot/node_modules/roslib/src/math/Vector3.js"],"names":["Vector3","options","x","y","z","prototype","add","v","subtract","multiplyQuaternion","q","ix","w","iy","iz","iw","clone","module","exports"],"mappings":"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","sourcesContent":["/**\n * @fileoverview\n * @author David Gossow - dgossow@willowgarage.com\n */\n\n/**\n * A 3D vector.\n *\n *  @constructor\n *  @param options - object with following keys:\n *   * x - the x value\n *   * y - the y value\n *   * z - the z value\n */\nfunction Vector3(options) {\n  options = options || {};\n  this.x = options.x || 0;\n  this.y = options.y || 0;\n  this.z = options.z || 0;\n}\n\n/**\n * Set the values of this vector to the sum of itself and the given vector.\n *\n * @param v the vector to add with\n */\nVector3.prototype.add = function(v) {\n  this.x += v.x;\n  this.y += v.y;\n  this.z += v.z;\n};\n\n/**\n * Set the values of this vector to the difference of itself and the given vector.\n *\n * @param v the vector to subtract with\n */\nVector3.prototype.subtract = function(v) {\n  this.x -= v.x;\n  this.y -= v.y;\n  this.z -= v.z;\n};\n\n/**\n * Multiply the given Quaternion with this vector.\n *\n * @param q - the quaternion to multiply with\n */\nVector3.prototype.multiplyQuaternion = function(q) {\n  var ix = q.w * this.x + q.y * this.z - q.z * this.y;\n  var iy = q.w * this.y + q.z * this.x - q.x * this.z;\n  var iz = q.w * this.z + q.x * this.y - q.y * this.x;\n  var iw = -q.x * this.x - q.y * this.y - q.z * this.z;\n  this.x = ix * q.w + iw * -q.x + iy * -q.z - iz * -q.y;\n  this.y = iy * q.w + iw * -q.y + iz * -q.x - ix * -q.z;\n  this.z = iz * q.w + iw * -q.z + ix * -q.y - iy * -q.x;\n};\n\n/**\n * Clone a copy of this vector.\n *\n * @returns the cloned vector\n */\nVector3.prototype.clone = function() {\n  return new Vector3(this);\n};\n\nmodule.exports = Vector3;"]},"metadata":{},"sourceType":"script"}