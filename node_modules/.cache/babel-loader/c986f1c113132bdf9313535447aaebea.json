{"ast":null,"code":"var _jsxFileName = \"/Users/julien/Sites/react-ros-robot/src/components/Coordinates.jsx\";\nimport React, { Component } from \"react\";\nimport { FormControl } from \"react-bootstrap\";\nimport { InputGroup } from \"react-bootstrap\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\nimport Config from \"../scripts/config\";\nimport { Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Coordinates extends Component {\n  constructor() {\n    super();\n    this.state = {\n      ros: null,\n      checked: false,\n      setpoint_x: 0,\n      setpoint_y: 0,\n      setpoint_z: 0\n    };\n  }\n\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros(); // Using window bc using CDN for ROSLIB and not NPM package\n    // Changing changing button color according to connection state\n\n    this.state.ros.on(\"connection\", () => {\n      this.setState({\n        connected: true\n      });\n    });\n    this.state.ros.on(\"close\", () => {\n      this.setState({\n        connected: false\n      }); //try to reconnect every 2 seconds\n\n      setTimeout(() => {\n        try {\n          this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n        } catch (error) {\n          console.log(\"connection problem\");\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n\n    try {\n      this.state.ros.connect(\"ws://\" + Config.ROSBRIDGE_SERVER_IP + \":\" + Config.ROSBRIDGE_SERVER_PORT + \"\");\n    } catch (error) {\n      console.log(\"connection problem\");\n    }\n  }\n\n  componentDidMount() {\n    this.init_connection();\n    this.goTo = this.goTo.bind(this);\n  }\n\n  goTo() {\n    var cmd_pose = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: \"mavros/setpoint_position/local\",\n      messageType: \"geometry_msgs/PoseStamped\"\n    });\n    var PoseStamped = new window.ROSLIB.Message({\n      header: {\n        seq: 0,\n        stamp: {\n          secs: 0,\n          nsecs: 0\n        },\n        frame_id: \"\"\n      },\n      pose: {\n        position: {\n          x: this.state.setpoint_x,\n          y: this.state.setpoint_y,\n          z: this.state.setpoint_z\n        },\n        orientation: {\n          x: 0.0,\n          y: 0.0,\n          z: 0.0,\n          w: 0.0\n        }\n      }\n    });\n    cmd_pose.publish(PoseStamped);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-grid\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              value: this.state.setpoint_x,\n              onChange: e => this.setState({\n                setpoint_x: parseFloat(e.target.value)\n              }),\n              \"aria-label\": \"X\",\n              \"aria-describedby\": \"basic-addon1\",\n              type: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              value: this.state.setpoint_y,\n              onChange: e => this.setState({\n                setpoint_y: parseFloat(e.target.value)\n              }),\n              \"aria-label\": \"Y\",\n              \"aria-describedby\": \"basic-addon1\",\n              type: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(InputGroup, {\n            className: \"mb-3\",\n            children: /*#__PURE__*/_jsxDEV(FormControl, {\n              value: this.state.setpoint_z,\n              onChange: e => this.setState({\n                setpoint_z: parseFloat(e.target.value)\n              }),\n              \"aria-label\": \"Z\",\n              \"aria-describedby\": \"basic-addon1\",\n              type: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"switch\",\n            id: \"custom-switch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Coordinates;","map":{"version":3,"sources":["/Users/julien/Sites/react-ros-robot/src/components/Coordinates.jsx"],"names":["React","Component","FormControl","InputGroup","Row","Col","Container","Form","Config","Button","Coordinates","constructor","state","ros","checked","setpoint_x","setpoint_y","setpoint_z","init_connection","window","ROSLIB","Ros","on","setState","connected","setTimeout","connect","ROSBRIDGE_SERVER_IP","ROSBRIDGE_SERVER_PORT","error","console","log","RECONNECTION_TIMER","componentDidMount","goTo","bind","cmd_pose","Topic","name","messageType","PoseStamped","Message","header","seq","stamp","secs","nsecs","frame_id","pose","position","x","y","z","orientation","w","publish","render","e","parseFloat","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,iBAA5B;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,iBAApC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,iBAAvB;;;AAEA,MAAMC,WAAN,SAA0BT,SAA1B,CAAoC;AASlCU,EAAAA,WAAW,GAAG;AACZ;AADY,SARdC,KAQc,GARN;AACNC,MAAAA,GAAG,EAAE,IADC;AAENC,MAAAA,OAAO,EAAE,KAFH;AAGNC,MAAAA,UAAU,EAAE,CAHN;AAINC,MAAAA,UAAU,EAAE,CAJN;AAKNC,MAAAA,UAAU,EAAE;AALN,KAQM;AAEb;;AAEDC,EAAAA,eAAe,GAAG;AAChB,SAAKN,KAAL,CAAWC,GAAX,GAAiB,IAAIM,MAAM,CAACC,MAAP,CAAcC,GAAlB,EAAjB,CADgB,CAC0B;AAE1C;;AACA,SAAKT,KAAL,CAAWC,GAAX,CAAeS,EAAf,CAAkB,YAAlB,EAAgC,MAAM;AACpC,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD,KAFD;AAIA,SAAKZ,KAAL,CAAWC,GAAX,CAAeS,EAAf,CAAkB,OAAlB,EAA2B,MAAM;AAC/B,WAAKC,QAAL,CAAc;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAd,EAD+B,CAE/B;;AACAC,MAAAA,UAAU,CAAC,MAAM;AACf,YAAI;AACF,eAAKb,KAAL,CAAWC,GAAX,CAAea,OAAf,CACE,UACElB,MAAM,CAACmB,mBADT,GAEE,GAFF,GAGEnB,MAAM,CAACoB,qBAHT,GAIE,EALJ;AAOD,SARD,CAQE,OAAOC,KAAP,EAAc;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD;AACF,OAZS,EAYPvB,MAAM,CAACwB,kBAZA,CAAV;AAaD,KAhBD;;AAkBA,QAAI;AACF,WAAKpB,KAAL,CAAWC,GAAX,CAAea,OAAf,CACE,UACElB,MAAM,CAACmB,mBADT,GAEE,GAFF,GAGEnB,MAAM,CAACoB,qBAHT,GAIE,EALJ;AAOD,KARD,CAQE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACD;AACF;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKf,eAAL;AACA,SAAKgB,IAAL,GAAY,KAAKA,IAAL,CAAUC,IAAV,CAAe,IAAf,CAAZ;AACD;;AAEDD,EAAAA,IAAI,GAAG;AACL,QAAIE,QAAQ,GAAG,IAAIjB,MAAM,CAACC,MAAP,CAAciB,KAAlB,CAAwB;AACrCxB,MAAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC,GADqB;AAErCyB,MAAAA,IAAI,EAAE,gCAF+B;AAGrCC,MAAAA,WAAW,EAAE;AAHwB,KAAxB,CAAf;AAMA,QAAIC,WAAW,GAAG,IAAIrB,MAAM,CAACC,MAAP,CAAcqB,OAAlB,CAA0B;AAC1CC,MAAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE,CADC;AAENC,QAAAA,KAAK,EAAE;AACLC,UAAAA,IAAI,EAAE,CADD;AAELC,UAAAA,KAAK,EAAE;AAFF,SAFD;AAMNC,QAAAA,QAAQ,EAAE;AANJ,OADkC;AAS1CC,MAAAA,IAAI,EAAE;AACJC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,CAAC,EAAE,KAAKtC,KAAL,CAAWG,UADN;AAERoC,UAAAA,CAAC,EAAE,KAAKvC,KAAL,CAAWI,UAFN;AAGRoC,UAAAA,CAAC,EAAE,KAAKxC,KAAL,CAAWK;AAHN,SADN;AAMJoC,QAAAA,WAAW,EAAE;AACXH,UAAAA,CAAC,EAAE,GADQ;AAEXC,UAAAA,CAAC,EAAE,GAFQ;AAGXC,UAAAA,CAAC,EAAE,GAHQ;AAIXE,UAAAA,CAAC,EAAE;AAJQ;AANT;AAToC,KAA1B,CAAlB;AAwBAlB,IAAAA,QAAQ,CAACmB,OAAT,CAAiBf,WAAjB;AACD;;AAEDgB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,iBACG,GADH,eAEE,QAAC,GAAD;AAAA,gCACE,QAAC,GAAD;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAC,MAAtB;AAAA,mCACE,QAAC,WAAD;AACE,cAAA,KAAK,EAAE,KAAK5C,KAAL,CAAWG,UADpB;AAEE,cAAA,QAAQ,EAAG0C,CAAD,IACR,KAAKlC,QAAL,CAAc;AAAER,gBAAAA,UAAU,EAAE2C,UAAU,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV;AAAxB,eAAd,CAHJ;AAKE,4BAAW,GALb;AAME,kCAAiB,cANnB;AAOE,cAAA,IAAI,EAAC;AAPP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAcE,QAAC,GAAD;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAC,MAAtB;AAAA,mCACE,QAAC,WAAD;AACE,cAAA,KAAK,EAAE,KAAKhD,KAAL,CAAWI,UADpB;AAEE,cAAA,QAAQ,EAAGyC,CAAD,IACR,KAAKlC,QAAL,CAAc;AAAEP,gBAAAA,UAAU,EAAE0C,UAAU,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV;AAAxB,eAAd,CAHJ;AAKE,4BAAW,GALb;AAME,kCAAiB,cANnB;AAOE,cAAA,IAAI,EAAC;AAPP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAdF,eA2BE,QAAC,GAAD;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAC,MAAtB;AAAA,mCACE,QAAC,WAAD;AACE,cAAA,KAAK,EAAE,KAAKhD,KAAL,CAAWK,UADpB;AAEE,cAAA,QAAQ,EAAGwC,CAAD,IACR,KAAKlC,QAAL,CAAc;AAAEN,gBAAAA,UAAU,EAAEyC,UAAU,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV;AAAxB,eAAd,CAHJ;AAKE,4BAAW,GALb;AAME,kCAAiB,cANnB;AAOE,cAAA,IAAI,EAAC;AAPP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA3BF,eAwCE,QAAC,GAAD;AAAA,iCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,IAAI,EAAC,QAAjB;AAA0B,YAAA,EAAE,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAiDD;;AA7IiC;;AAgJpC,eAAelD,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { FormControl } from \"react-bootstrap\";\nimport { InputGroup } from \"react-bootstrap\";\nimport { Row, Col, Container } from \"react-bootstrap\";\nimport { Form } from \"react-bootstrap\";\nimport Config from \"../scripts/config\";\nimport { Button } from \"react-bootstrap\";\n\nclass Coordinates extends Component {\n  state = {\n    ros: null,\n    checked: false,\n    setpoint_x: 0,\n    setpoint_y: 0,\n    setpoint_z: 0,\n  };\n\n  constructor() {\n    super();\n  }\n\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros(); // Using window bc using CDN for ROSLIB and not NPM package\n\n    // Changing changing button color according to connection state\n    this.state.ros.on(\"connection\", () => {\n      this.setState({ connected: true });\n    });\n\n    this.state.ros.on(\"close\", () => {\n      this.setState({ connected: false });\n      //try to reconnect every 2 seconds\n      setTimeout(() => {\n        try {\n          this.state.ros.connect(\n            \"ws://\" +\n              Config.ROSBRIDGE_SERVER_IP +\n              \":\" +\n              Config.ROSBRIDGE_SERVER_PORT +\n              \"\"\n          );\n        } catch (error) {\n          console.log(\"connection problem\");\n        }\n      }, Config.RECONNECTION_TIMER);\n    });\n\n    try {\n      this.state.ros.connect(\n        \"ws://\" +\n          Config.ROSBRIDGE_SERVER_IP +\n          \":\" +\n          Config.ROSBRIDGE_SERVER_PORT +\n          \"\"\n      );\n    } catch (error) {\n      console.log(\"connection problem\");\n    }\n  }\n\n  componentDidMount() {\n    this.init_connection();\n    this.goTo = this.goTo.bind(this);\n  }\n\n  goTo() {\n    var cmd_pose = new window.ROSLIB.Topic({\n      ros: this.state.ros,\n      name: \"mavros/setpoint_position/local\",\n      messageType: \"geometry_msgs/PoseStamped\",\n    });\n\n    var PoseStamped = new window.ROSLIB.Message({\n      header: {\n        seq: 0,\n        stamp: {\n          secs: 0,\n          nsecs: 0,\n        },\n        frame_id: \"\",\n      },\n      pose: {\n        position: {\n          x: this.state.setpoint_x,\n          y: this.state.setpoint_y,\n          z: this.state.setpoint_z,\n        },\n        orientation: {\n          x: 0.0,\n          y: 0.0,\n          z: 0.0,\n          w: 0.0,\n        },\n      },\n    });\n\n    cmd_pose.publish(PoseStamped);\n  }\n\n  render() {\n    return (\n      <div className=\"d-grid\">\n        {\" \"}\n        <Row>\n          <Col>\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                value={this.state.setpoint_x}\n                onChange={(e) =>\n                  this.setState({ setpoint_x: parseFloat(e.target.value) })\n                }\n                aria-label=\"X\"\n                aria-describedby=\"basic-addon1\"\n                type=\"number\"\n              />\n            </InputGroup>\n          </Col>\n          <Col>\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                value={this.state.setpoint_y}\n                onChange={(e) =>\n                  this.setState({ setpoint_y: parseFloat(e.target.value) })\n                }\n                aria-label=\"Y\"\n                aria-describedby=\"basic-addon1\"\n                type=\"number\"\n              />\n            </InputGroup>\n          </Col>\n          <Col>\n            <InputGroup className=\"mb-3\">\n              <FormControl\n                value={this.state.setpoint_z}\n                onChange={(e) =>\n                  this.setState({ setpoint_z: parseFloat(e.target.value) })\n                }\n                aria-label=\"Z\"\n                aria-describedby=\"basic-addon1\"\n                type=\"number\"\n              />\n            </InputGroup>\n          </Col>\n          <Col>\n            <Form.Check type=\"switch\" id=\"custom-switch\" />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default Coordinates;\n"]},"metadata":{},"sourceType":"module"}