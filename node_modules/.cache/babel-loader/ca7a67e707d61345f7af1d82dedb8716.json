{"ast":null,"code":"var _jsxFileName = \"/Users/julien/Sites/react-ros-robot/src/components/Connection.jsx\";\nimport React, { Component } from \"react\";\nimport { Alert } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Connection extends Component {\n  constructor() {\n    this.init_connection();\n  }\n\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros(); // Using window bc using CDN for ROSLIB and not NPM package\n\n    console.log(this.state.ros);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      className: \"text-center my-4\",\n      variant: this.state.connected ? \"success\" : \"danger\",\n      children: this.state.connected ? \"Robot Connected\" : \"Robot Disconnected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Connection;","map":{"version":3,"sources":["/Users/julien/Sites/react-ros-robot/src/components/Connection.jsx"],"names":["React","Component","Alert","Connection","constructor","init_connection","state","ros","window","ROSLIB","Ros","console","log","render","connected"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,iBAAtB;;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAGjCG,EAAAA,WAAW,GAAG;AACZ,SAAKC,eAAL;AACD;;AAEDA,EAAAA,eAAe,GAAG;AAChB,SAAKC,KAAL,CAAWC,GAAX,GAAiB,IAAIC,MAAM,CAACC,MAAP,CAAcC,GAAlB,EAAjB,CADgB,CAC0B;;AAC1CC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,GAAvB;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,KAAD;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,OAAO,EAAE,KAAKP,KAAL,CAAWQ,SAAX,GAAuB,SAAvB,GAAmC,QAF9C;AAAA,gBAIG,KAAKR,KAAL,CAAWQ,SAAX,GAAuB,iBAAvB,GAA2C;AAJ9C;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AArBgC;;AAwBnC,eAAeX,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Alert } from \"react-bootstrap\";\n\nclass Connection extends Component {\n  state = { connected: false, ros: null };\n\n  constructor() {\n    this.init_connection();\n  }\n\n  init_connection() {\n    this.state.ros = new window.ROSLIB.Ros(); // Using window bc using CDN for ROSLIB and not NPM package\n    console.log(this.state.ros);\n  }\n\n  render() {\n    return (\n      <Alert\n        className=\"text-center my-4\"\n        variant={this.state.connected ? \"success\" : \"danger\"}\n      >\n        {this.state.connected ? \"Robot Connected\" : \"Robot Disconnected\"}\n      </Alert>\n    );\n  }\n}\n\nexport default Connection;\n"]},"metadata":{},"sourceType":"module"}