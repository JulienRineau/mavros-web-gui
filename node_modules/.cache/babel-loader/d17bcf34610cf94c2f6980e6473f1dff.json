{"ast":null,"code":"/**\n * @fileOverview\n * @author David V. Lu!!  davidvlu@gmail.com\n */\nvar Pose = require('../math/Pose');\n\nvar Vector3 = require('../math/Vector3');\n\nvar Quaternion = require('../math/Quaternion');\n/**\n * A Joint element in a URDF.\n *\n * @constructor\n * @param options - object with following keys:\n *  * xml - the XML element to parse\n */\n\n\nfunction UrdfJoint(options) {\n  this.name = options.xml.getAttribute('name');\n  this.type = options.xml.getAttribute('type');\n  var parents = options.xml.getElementsByTagName('parent');\n\n  if (parents.length > 0) {\n    this.parent = parents[0].getAttribute('link');\n  }\n\n  var children = options.xml.getElementsByTagName('child');\n\n  if (children.length > 0) {\n    this.child = children[0].getAttribute('link');\n  }\n\n  var limits = options.xml.getElementsByTagName('limit');\n\n  if (limits.length > 0) {\n    this.minval = parseFloat(limits[0].getAttribute('lower'));\n    this.maxval = parseFloat(limits[0].getAttribute('upper'));\n  } // Origin\n\n\n  var origins = options.xml.getElementsByTagName('origin');\n\n  if (origins.length === 0) {\n    // use the identity as the default\n    this.origin = new Pose();\n  } else {\n    // Check the XYZ\n    var xyz = origins[0].getAttribute('xyz');\n    var position = new Vector3();\n\n    if (xyz) {\n      xyz = xyz.split(' ');\n      position = new Vector3({\n        x: parseFloat(xyz[0]),\n        y: parseFloat(xyz[1]),\n        z: parseFloat(xyz[2])\n      });\n    } // Check the RPY\n\n\n    var rpy = origins[0].getAttribute('rpy');\n    var orientation = new Quaternion();\n\n    if (rpy) {\n      rpy = rpy.split(' '); // Convert from RPY\n\n      var roll = parseFloat(rpy[0]);\n      var pitch = parseFloat(rpy[1]);\n      var yaw = parseFloat(rpy[2]);\n      var phi = roll / 2.0;\n      var the = pitch / 2.0;\n      var psi = yaw / 2.0;\n      var x = Math.sin(phi) * Math.cos(the) * Math.cos(psi) - Math.cos(phi) * Math.sin(the) * Math.sin(psi);\n      var y = Math.cos(phi) * Math.sin(the) * Math.cos(psi) + Math.sin(phi) * Math.cos(the) * Math.sin(psi);\n      var z = Math.cos(phi) * Math.cos(the) * Math.sin(psi) - Math.sin(phi) * Math.sin(the) * Math.cos(psi);\n      var w = Math.cos(phi) * Math.cos(the) * Math.cos(psi) + Math.sin(phi) * Math.sin(the) * Math.sin(psi);\n      orientation = new Quaternion({\n        x: x,\n        y: y,\n        z: z,\n        w: w\n      });\n      orientation.normalize();\n    }\n\n    this.origin = new Pose({\n      position: position,\n      orientation: orientation\n    });\n  }\n}\n\nmodule.exports = UrdfJoint;","map":{"version":3,"sources":["/Users/julien/Sites/react-ros-robot/node_modules/roslib/src/urdf/UrdfJoint.js"],"names":["Pose","require","Vector3","Quaternion","UrdfJoint","options","name","xml","getAttribute","type","parents","getElementsByTagName","length","parent","children","child","limits","minval","parseFloat","maxval","origins","origin","xyz","position","split","x","y","z","rpy","orientation","roll","pitch","yaw","phi","the","psi","Math","sin","cos","w","normalize","module","exports"],"mappings":"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","sourcesContent":["/**\n * @fileOverview\n * @author David V. Lu!!  davidvlu@gmail.com\n */\n\nvar Pose = require('../math/Pose');\nvar Vector3 = require('../math/Vector3');\nvar Quaternion = require('../math/Quaternion');\n\n/**\n * A Joint element in a URDF.\n *\n * @constructor\n * @param options - object with following keys:\n *  * xml - the XML element to parse\n */\nfunction UrdfJoint(options) {\n  this.name = options.xml.getAttribute('name');\n  this.type = options.xml.getAttribute('type');\n\n  var parents = options.xml.getElementsByTagName('parent');\n  if(parents.length > 0) {\n    this.parent = parents[0].getAttribute('link');\n  }\n\n  var children = options.xml.getElementsByTagName('child');\n  if(children.length > 0) {\n    this.child = children[0].getAttribute('link');\n  }\n\n  var limits = options.xml.getElementsByTagName('limit');\n  if (limits.length > 0) {\n    this.minval = parseFloat( limits[0].getAttribute('lower') );\n    this.maxval = parseFloat( limits[0].getAttribute('upper') );\n  }\n\n  // Origin\n  var origins = options.xml.getElementsByTagName('origin');\n  if (origins.length === 0) {\n    // use the identity as the default\n    this.origin = new Pose();\n  } else {\n    // Check the XYZ\n    var xyz = origins[0].getAttribute('xyz');\n    var position = new Vector3();\n    if (xyz) {\n      xyz = xyz.split(' ');\n      position = new Vector3({\n        x : parseFloat(xyz[0]),\n        y : parseFloat(xyz[1]),\n        z : parseFloat(xyz[2])\n      });\n    }\n\n    // Check the RPY\n    var rpy = origins[0].getAttribute('rpy');\n    var orientation = new Quaternion();\n    if (rpy) {\n      rpy = rpy.split(' ');\n      // Convert from RPY\n      var roll = parseFloat(rpy[0]);\n      var pitch = parseFloat(rpy[1]);\n      var yaw = parseFloat(rpy[2]);\n      var phi = roll / 2.0;\n      var the = pitch / 2.0;\n      var psi = yaw / 2.0;\n      var x = Math.sin(phi) * Math.cos(the) * Math.cos(psi) - Math.cos(phi) * Math.sin(the)\n          * Math.sin(psi);\n      var y = Math.cos(phi) * Math.sin(the) * Math.cos(psi) + Math.sin(phi) * Math.cos(the)\n          * Math.sin(psi);\n      var z = Math.cos(phi) * Math.cos(the) * Math.sin(psi) - Math.sin(phi) * Math.sin(the)\n          * Math.cos(psi);\n      var w = Math.cos(phi) * Math.cos(the) * Math.cos(psi) + Math.sin(phi) * Math.sin(the)\n          * Math.sin(psi);\n\n      orientation = new Quaternion({\n        x : x,\n        y : y,\n        z : z,\n        w : w\n      });\n      orientation.normalize();\n    }\n    this.origin = new Pose({\n      position : position,\n      orientation : orientation\n    });\n  }\n}\n\nmodule.exports = UrdfJoint;\n"]},"metadata":{},"sourceType":"script"}